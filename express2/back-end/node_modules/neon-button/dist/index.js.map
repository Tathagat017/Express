{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles.css'\n\nclass NeonButton extends Component {\n  state={hover: false}\n  static propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string\n  }\n\n  getInitialState= ()=>{\n    return {hover: false}\n  }\n  toggleHover =()=>{\n    this.setState({hover: !this.state.hover})\n  }\n\n  render() {\n    const {\n      text, color\n    } = this.props\n\n    var linkStyle;\n    if (this.state.hover) {\n      linkStyle = {color: color}\n    } else {\n      linkStyle = {color: '#e3e3e3'}\n    }\n\n    var boxStyle;\n    if (this.state.hover) {\n      boxStyle = {boxShadow: `0px 0px 22px 10px ${color}`}\n    } else {\n      boxStyle = {color: '#e3e3e3'}\n    }\n\n\n    return (\n      <button\n        className={styles.outerN}\n        style={boxStyle}\n        onMouseEnter={this.toggleHover}\n        onMouseLeave={this.toggleHover}\n      >\n        <div\n          className={styles.innerN}\n          style={linkStyle}\n        >{text}</div>\n      </button>\n    )\n  }\n}\n\n\nNeonButton.defaultProps= {\n  text: \"Enter Button Text\",\n  color: \"#34ebb7\"\n}\n\nexport default NeonButton;\n"],"names":["NeonButton","state","hover","getInitialState","toggleHover","setState","props","text","color","linkStyle","boxStyle","boxShadow","React","styles","outerN","innerN","Component","propTypes","PropTypes","string","defaultProps"],"mappings":";;;;;;;;AAAA,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;EAC7B,KAAK,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;EAC/B,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;;EAE5B,IAAI,CAAC,GAAG,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE,EAAE,OAAO,EAAE;;EAExD,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACrE,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EAC5C,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;;EAExB,IAAI,QAAQ,KAAK,KAAK,EAAE;IACtB,IAAI,IAAI,CAAC,UAAU,EAAE;MACnB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;KAC3C,MAAM;MACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KACzB;GACF,MAAM;IACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;GACzB;;EAED,IAAI,KAAK,CAAC,UAAU,EAAE;IACpB,KAAK,CAAC,UAAU,CAAC,OAAO,GAAG,GAAG,CAAC;GAChC,MAAM;IACL,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;GACjD;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICpBKA;;;;;;;;;;;;;;6LACJC,QAAM,EAACC,OAAO,KAAR,UAMNC,kBAAiB,YAAI;aACZ,EAACD,OAAO,KAAR,EAAP;aAEFE,cAAa,YAAI;YACVC,QAAL,CAAc,EAACH,OAAO,CAAC,MAAKD,KAAL,CAAWC,KAApB,EAAd;;;;;;6BAGO;mBAGH,KAAKI,KAHF;UAELC,IAFK,UAELA,IAFK;UAECC,KAFD,UAECA,KAFD;;;UAKHC,SAAJ;UACI,KAAKR,KAAL,CAAWC,KAAf,EAAsB;oBACR,EAACM,OAAOA,KAAR,EAAZ;OADF,MAEO;oBACO,EAACA,OAAO,SAAR,EAAZ;;;UAGEE,QAAJ;UACI,KAAKT,KAAL,CAAWC,KAAf,EAAsB;mBACT,EAACS,kCAAgCH,KAAjC,EAAX;OADF,MAEO;mBACM,EAACA,OAAO,SAAR,EAAX;;;aAKAI;;;qBACaC,OAAOC,MADpB;iBAESJ,QAFT;wBAGgB,KAAKN,WAHrB;wBAIgB,KAAKA;;;;;uBAGNS,OAAOE,MADpB;mBAESN;;;;OATb;;;;EAlCqBO;;AAAnBhB,WAEGiB,YAAY;QACXC,UAAUC,MADC;SAEVD,UAAUC;;;;AA+CrBnB,WAAWoB,YAAX,GAAyB;QACjB,mBADiB;SAEhB;CAFT;;;;"}